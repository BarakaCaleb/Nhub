import { Codec } from '../../types';
import { Compact, Struct } from '../../codec';
import { Bytes, Fixed64, GenericAccountId, GenericAccountIndex, GenericAddress, GenericBlock, GenericCall, GenericConsensusEngineId, GenericDigest, GenericDigestItem, GenericExtrinsic, GenericExtrinsicEra, GenericExtrinsicPayload, GenericExtrinsicPayloadUnknown, GenericExtrinsicPayloadV1, GenericExtrinsicPayloadV2, GenericExtrinsicPayloadV3, GenericExtrinsicUnknown, GenericExtrinsicV1, GenericExtrinsicV2, GenericExtrinsicV3, GenericImmortalEra, GenericMortalEra, GenericOrigin, GenericSignerPayload, H256, H512, Null, StorageData, StorageKey, u128, u32, u64 } from '../../primitive';
/** GenericAccountId */
export declare type AccountId = GenericAccountId;
/** AccountId */
export declare type AccountIdOf = AccountId;
/** GenericAccountIndex */
export declare type AccountIndex = GenericAccountIndex;
/** GenericAddress */
export declare type Address = GenericAddress;
/** u32 */
export declare type AssetId = u32;
/** u128 */
export declare type Balance = u128;
/** Balance */
export declare type BalanceOf = Balance;
/** GenericBlock */
export declare type Block = GenericBlock;
/** u32 */
export declare type BlockNumber = u32;
/** GenericCall */
export declare type Call = GenericCall;
/** [ConsensusEngineId, Bytes] & Codec */
export declare type Consensus = [ConsensusEngineId, Bytes] & Codec;
/** GenericConsensusEngineId */
export declare type ConsensusEngineId = GenericConsensusEngineId;
/** GenericDigest */
export declare type Digest = GenericDigest;
/** GenericDigestItem */
export declare type DigestItem = GenericDigestItem;
/** Signature */
export declare type Ed25519Signature = Signature;
/** GenericExtrinsic */
export declare type Extrinsic = GenericExtrinsic;
/** GenericExtrinsicEra */
export declare type ExtrinsicEra = GenericExtrinsicEra;
/** GenericExtrinsicPayload */
export declare type ExtrinsicPayload = GenericExtrinsicPayload;
/** GenericExtrinsicPayloadUnknown */
export declare type ExtrinsicPayloadUnknown = GenericExtrinsicPayloadUnknown;
/** GenericExtrinsicPayloadV1 */
export declare type ExtrinsicPayloadV1 = GenericExtrinsicPayloadV1;
/** GenericExtrinsicPayloadV2 */
export declare type ExtrinsicPayloadV2 = GenericExtrinsicPayloadV2;
/** GenericExtrinsicPayloadV3 */
export declare type ExtrinsicPayloadV3 = GenericExtrinsicPayloadV3;
/** GenericExtrinsicUnknown */
export declare type ExtrinsicUnknown = GenericExtrinsicUnknown;
/** GenericExtrinsicV1 */
export declare type ExtrinsicV1 = GenericExtrinsicV1;
/** GenericExtrinsicV2 */
export declare type ExtrinsicV2 = GenericExtrinsicV2;
/** GenericExtrinsicV3 */
export declare type ExtrinsicV3 = GenericExtrinsicV3;
/** H256 */
export declare type Hash = H256;
/** Struct */
export interface Header extends Struct {
    /** Hash */
    readonly parentHash: Hash;
    /** Compact<BlockNumber> */
    readonly number: Compact<BlockNumber>;
    /** Hash */
    readonly stateRoot: Hash;
    /** Hash */
    readonly extrinsicsRoot: Hash;
    /** Digest */
    readonly digest: Digest;
}
/** GenericImmortalEra */
export declare type ImmortalEra = GenericImmortalEra;
/** u32 */
export declare type Index = u32;
/** Bytes */
export declare type Justification = Bytes;
/** u32 */
export declare type KeyTypeId = u32;
/** [StorageKey, StorageData] & Codec */
export declare type KeyValue = [StorageKey, StorageData] & Codec;
/** Uint8Array & Codec */
export declare type LockIdentifier = Uint8Array & Codec;
/** u64 */
export declare type Moment = u64;
/** GenericMortalEra */
export declare type MortalEra = GenericMortalEra;
/** GenericOrigin */
export declare type Origin = GenericOrigin;
/** u32 */
export declare type Perbill = u32;
/** u32 */
export declare type Permill = u32;
/** Null */
export declare type Phantom = Null;
/** Null */
export declare type PhantomData = Null;
/** [ConsensusEngineId, Bytes] & Codec */
export declare type PreRuntime = [ConsensusEngineId, Bytes] & Codec;
/** [ConsensusEngineId, Bytes] & Codec */
export declare type Seal = [ConsensusEngineId, Bytes] & Codec;
/** [u64, Signature] & Codec */
export declare type SealV0 = [u64, Signature] & Codec;
/** H512 */
export declare type Signature = H512;
/** Struct */
export interface SignedBlock extends Struct {
    /** Block */
    readonly block: Block;
    /** Justification */
    readonly justification: Justification;
}
/** GenericSignerPayload */
export declare type SignerPayload = GenericSignerPayload;
/** Signature */
export declare type Sr25519Signature = Signature;
/** AccountId */
export declare type ValidatorId = AccountId;
/** u32 */
export declare type Weight = u32;
/** Fixed64 */
export declare type WeightMultiplier = Fixed64;
